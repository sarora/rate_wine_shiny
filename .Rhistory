n <- 100
X = rnorm(n)
e = rnorm(n)
y = X+e
Xrange <- data.frame(D=seq(-4,4,0.01))
fit_lm <- predict(lm(y~X,data=data.frame(x=X,y=y)), newdata=Xrange)
fit_loess <- predict(loess(y~X, data=data.frame(x=X,y=y), degree=1, span=0.5), newdata=Xrange)
D <- data.frame(fit_lm= fit_lm, fit_loess=fit_loess, X_val= Xrange$D)
return(D)
}
A <- fit_sample()
seq(-4,4,0.01)
seq(-4,4,0.01)
X
n <- 100
X = rnorm(n)
X
e = rnorm(n)
e
y = X+e
y
Xrange <- data.frame(X=seq(-4,4,0.01))
Xrange
### fitting one sample..........
fit_sample <- function() {
n <- 100
X = rnorm(n)
e = rnorm(n)
y = X+e
Xrange <- data.frame(D=seq(-4,4,0.01))
fit_lm <- predict(lm(y~D,data=data.frame(x=D,y=y)), newdata=Xrange)
fit_loess <- predict(loess(y~D, data=data.frame(x=D,y=y), degree=1, span=0.5), newdata=Xrange)
D <- data.frame(fit_lm= fit_lm, fit_loess=fit_loess, X_val= Xrange$D)
return(D)
}
A <- fit_sample()
### fitting one sample..........
fit_sample <- function() {
n <- 100
X = rnorm(n)
e = rnorm(n)
y = X+e
Xrange <- data.frame(D=seq(-4,4,0.01))
fit_lm <- predict(lm(y~X,data=data.frame(x=X,y=y)), newdata=Xrange)
fit_loess <- predict(loess(y~X, data=data.frame(x=X,y=y), degree=1, span=0.5), newdata=Xrange)
D <- data.frame(fit_lm= fit_lm, fit_loess=fit_loess, X_val= Xrange$X)
return(D)
}
A <- fit_sample()
### fitting one sample..........
fit_sample <- function() {
n <- 100
X = rnorm(n)
e = rnorm(n)
y = X+e
Xrange <- data.frame(X=seq(-4,4,0.01))
fit_lm <- predict(lm(y~X,data=data.frame(x=X,y=y)), newdata=Xrange)
fit_loess <- predict(loess(y~X, data=data.frame(x=X,y=y), degree=1, span=0.5), newdata=Xrange)
D <- data.frame(fit_lm= fit_lm, fit_loess=fit_loess, X_val= Xrange$X)
return(D)
}
A <- fit_sample()
A <- A %>% mutate("id" = 1)
### fitting one sample..........
fit_sample <- function() {
n <- 100
e = rnorm(n)
y = X+e
Xrange <- data.frame(X=seq(-4,4,0.01))
fit_lm <- predict(lm(y~X,data=data.frame(x=X,y=y)), newdata=Xrange)
fit_loess <- predict(loess(y~X, data=data.frame(x=X,y=y), degree=1, span=0.5), newdata=Xrange)
D <- data.frame(fit_lm= fit_lm, fit_loess=fit_loess, X_val= Xrange$X)
return(D)
}
A <- fit_sample()
A <- A %>% mutate("id" = 1)
### fitting one sample..........
fit_sample <- function() {
n <- 100
e = rnorm(n)
y = X+e
Xrange <- data.frame(X=seq(-4,4,0.01))
fit_lm <- predict(lm(y~X,data=data.frame(x=X,y=y)), newdata=Xrange)
fit_loess <- predict(loess(y~X, data=data.frame(x=X,y=y), degree=1, span=0.5), newdata=Xrange)
D <- data.frame(fit_lm= fit_lm, fit_loess=fit_loess, X_val= Xrange$X)
return(D)
}
A <- fit_sample()
Xrange <- data.frame(X=seq(-4,4,0.01))
Xrange
Xrange <- data.frame(D=seq(-4,4,0.01))
fit_lm <- predict(lm(y~X,data=data.frame(x=X,y=y)), newdata=Xrange)
fit_lm <- predict(lm(y~D,data=data.frame(x=X,y=y)), newdata=Xrange)
fit_lm <- predict(lm(y~D,data=data.frame(x=D,y=y)), newdata=Xrange)
y = D+e
e = rnorm(n)
### fitting one sample..........
fit_sample <- function() {
n <- 100
X = rnorm(n)
e = rnorm(n)
y = X+e
Xrange <- data.frame(X=seq(-4,4,0.01))
fit_lm <- predict(lm(y~X,data=data.frame(x=X,y=y)), newdata=Xrange)
fit_loess <- predict(loess(y~X, data=data.frame(x=X,y=y), degree=1, span=0.5), newdata=Xrange)
D <- data.frame(fit_lm= fit_lm, fit_loess=fit_loess, X_val= Xrange$X)
return(D)
}
A <- fit_sample()
A <- A %>% mutate("id" = 1)
for (i in 2:100){
B <- fit_sample()
B <- B %>% mutate("id" = i)
A <- rbind(A,B)
}
ggplot(A, aes(x = fit_lm, y = X_val)) +
geom_line(aes(group = id), alpha = 0.1) +
geom_line(aes(x=X_val,y=X_val), color="pink")
v
### fitting one sample..........
fit_sample <- function() {
n <- 100
X = rnorm(n)
e = rnorm(n)
y = X+e
Xrange <- data.frame(X=seq(-4,4,0.01))
fit_lm <- predict(lm(y~X,data=data.frame(x=X,y=y)), newdata=Xrange)
fit_loess <- predict(loess(y~X, data=data.frame(x=X,y=y), degree=1, span=0.5), newdata=Xrange)
D <- data.frame(fit_lm= fit_lm, fit_loess=fit_loess, X_val= Xrange$X)
return(D)
}
A <- fit_sample()
A <- A %>% mutate("id" = 1)
for (i in 2:100){
B <- fit_sample()
B <- B %>% mutate("id" = i)
A <- rbind(A,B)
}
v
ggplot(A, aes(x = X_val, y = fit_lm)) +
geom_line(aes(group = id), alpha = 0.1) +
geom_line(aes(x=X_val,y=X_val), color="pink")
ggplot(A, aes(x = X_val, y = fit_loess)) +
geom_line(aes(group = id), alpha = 0.1) +
geom_line(aes(x=X_val,y=X_val), color="pink")
set.seed(40)
n <- 300
tibble(x1 = rnorm(n),
x2 = rnorm(n, sd=50),
y  = 4*x1+x2/50+rnorm(n)/4) %>%
ggplot(aes(x1,x2)) +
geom_point(aes(colour=y)) +
scale_colour_viridis("Response\nvalue") +
theme_bw() +
theme(axis.title.y=element_text(angle=0, vjust=0.5))
n <- 100
X = rnorm(n)
e = rnorm(n)
y = X+e
Xrange <- data.frame(X=seq(-4,4,0.01))
fit_lm <- predict(lm(y~X,data=data.frame(x=X,y=y)), newdata=Xrange)
fit_loess <- predict(loess(y~X, data=data.frame(x=X,y=y), degree=1, span=0.5), newdata=Xrange)
return(data.frame(fit_lm= fit_lm, fit_loess=fit_loess, X_val= Xrange$X))
### fitting one sample..........
fit_sample <- function() {
n <- 100
X = rnorm(n)
e = rnorm(n)
y = X+e
Xrange <- data.frame(X=seq(-4,4,0.01))
fit_lm <- predict(lm(y~X,data=data.frame(x=X,y=y)), newdata=Xrange)
fit_loess <- predict(loess(y~X, data=data.frame(x=X,y=y), degree=1, span=0.5), newdata=Xrange)
return (data.frame(fit_lm= fit_lm, fit_loess=fit_loess, X_val= Xrange$X))
}
A
### fitting one sample..........
fit_sample <- function() {
n <- 100
X = rnorm(n)
e = rnorm(n)
y = X+e
Xrange <- data.frame(X=seq(-4,4,0.01))
fit_lm <- predict(lm(y~X,data=data.frame(x=X,y=y)), newdata=Xrange)
fit_loess <- predict(loess(y~X, data=data.frame(x=X,y=y), degree=1, span=0.5), newdata=Xrange)
return (data.frame(fit_lm= fit_lm, fit_loess=fit_loess, X_val= Xrange$X))
}
fit_sample <- function() {
n <- 100
X = rnorm(n)
e = rnorm(n)
y = X+e
Xrange <- data.frame(X=seq(-4,4,0.01))
fit_lm <- predict(lm(y~X,data=data.frame(x=X,y=y)), newdata=Xrange)
fit_loess <- predict(loess(y~X, data=data.frame(x=X,y=y), degree=1, span=0.5), newdata=Xrange)
return (data.frame(fit_lm= fit_lm, fit_loess=fit_loess, X_val= Xrange$X))
}
A <- fit_sample()
A
flu_test_predict <- predict(fit1, newdata = flu_test)### 6
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(viridis))
suppressPackageStartupMessages(library(reshape2))
flu_train <- read.csv("data/flu-train.csv")
flu_test <- read.csv("data/flu-test.csv")
ggplot(flu_train, aes(x = WEEK, y = PERCENT_POSITIVES)) +
geom_line(aes(group = YEAR, color = forcats::fct_other(as.factor(YEAR),keep = 2009)))
library(splines)
kr1 <- seq(min(flu_train$WEEK), max(flu_train$WEEK), 10)
kr2 <- seq(min(flu_train$WEEK), max(flu_train$WEEK), 5)
fit1 <- lm(PERCENT_POSITIVES ~  ns(WEEK, knots=kr1), data = flu_train)
summary(fit1)
fit2 <- lm(PERCENT_POSITIVES ~  ns(WEEK, knots=kr2), data = flu_train)
summary(fit2)
x <- flu_train$WEEK
y <- flu_train$PERCENT_POSITIVES
ggplot(flu_train, aes(WEEK, PERCENT_POSITIVES)) +
geom_line(aes(group=YEAR), alpha=0.2) +
geom_line(data=data.frame(x=x, y=predict(fit1)), mapping=aes(x, y), color = "red") +
geom_line(data=data.frame(x=x, y=predict(fit2)), mapping = aes(x, y),color = "blue") +
xlab("Week") + ylab("Percent Positive") +
ggtitle("Flu Training Data Percent Positives:\nSpline Interpolation")
flu_test_predict <- predict(fit1, newdata = flu_test)### 6
flu_test_predict_1 <- predict(fit2, newdata = flu_test) #### 11
x <- flu_test$WEEK
y <- flu_test$PERCENT_POSITIVES
MSE <- mean((y - flu_test_predict)^2)
MSE
MSE_1 <- mean((y - flu_test_predict_1)^2)
MSE_1
flu_test_predict <- predict(fit1, newdata = flu_test)### 6
flu_test_predict_1 <- predict(fit2, newdata = flu_test) #### 11
x <- flu_test$WEEK
y <- flu_test$PERCENT_POSITIVES
MSE <- mean((y - flu_test_predict)^2)
MSE
MSE_1 <- mean((y - flu_test_predict_1)^2)
MSE_1
predict(fit1, newdata = flu_test)
MSE <- mean((y - flu_test_predict)^2)
MSE
MSE_1 <- mean((y - flu_test_predict_1)^2)
MSE_1
library(splines)
kr1 <- seq(min(flu_train$WEEK), max(flu_train$WEEK), 10)
kr2 <- seq(min(flu_train$WEEK), max(flu_train$WEEK), 5)
fit1 <- lm(PERCENT_POSITIVES ~ WEEK, data = flu_train)
summary(fit1)
fit1 <- lm(PERCENT_POSITIVES ~  ns(WEEK, knots=kr1), data = flu_train)
summary(fit1)
fit2 <- lm(PERCENT_POSITIVES ~  ns(WEEK, knots=kr2), data = flu_train)
summary(fit2)
x <- flu_train$WEEK
y <- flu_train$PERCENT_POSITIVES
ggplot(flu_train, aes(WEEK, PERCENT_POSITIVES)) +
geom_line(aes(group=YEAR), alpha=0.2) +
geom_line(data=data.frame(x=x, y=predict(fit1)), mapping=aes(x, y), color = "red") +
geom_line(data=data.frame(x=x, y=predict(fit2)), mapping = aes(x, y),color = "blue") +
xlab("Week") + ylab("Percent Positive") +
ggtitle("Flu Training Data Percent Positives:\nSpline Interpolation")
library(splines)
kr1 <- seq(min(flu_train$WEEK), max(flu_train$WEEK), 10)
kr2 <- seq(min(flu_train$WEEK), max(flu_train$WEEK), 5)
fit <- lm(PERCENT_POSITIVES ~ WEEK, data = flu_train)
summary(fit)
fit1 <- lm(PERCENT_POSITIVES ~  ns(WEEK, knots=kr1), data = flu_train)
summary(fit1)
fit2 <- lm(PERCENT_POSITIVES ~  ns(WEEK, knots=kr2), data = flu_train)
summary(fit2)
x <- flu_train$WEEK
y <- flu_train$PERCENT_POSITIVES
ggplot(flu_train, aes(WEEK, PERCENT_POSITIVES)) +
geom_line(aes(group=YEAR), alpha=0.2) +
geom_line(data=data.frame(x=x, y=predict(fit)), mapping=aes(x, y), color = "green") +
geom_line(data=data.frame(x=x, y=predict(fit1)), mapping=aes(x, y), color = "red") +
geom_line(data=data.frame(x=x, y=predict(fit2)), mapping = aes(x, y),color = "blue") +
xlab("Week") + ylab("Percent Positive") +
ggtitle("Flu Training Data Percent Positives:\nSpline Interpolation")
x <- flu_test$WEEK
y <- flu_test$PERCENT_POSITIVES
flu_test_predict <- predict(fit, newdata = flu_test)### 6
flu_test_predict_1 <- predict(fit1, newdata = flu_test)### 6
flu_test_predict_2 <- predict(fit2, newdata = flu_test) #### 11
MSE <- mean((y - flu_test_predict)^2)
MSE_1 <- mean((y - flu_test_predict_1)^2)
MSE_2 <- mean((y - flu_test_predict_2)^2)
MSE
MSE_1
MSE_2
MSE
MSE_1
MSE_2
mod<- model_poly1 %>% broom::augment()
model_poly0 <- loess(flow$flow ~ flow$day_of_year,span = 0.05, degree= 0)
ggplot(flu_train, aes(x = WEEK, y = PERCENT_POSITIVES)) +
geom_line(aes(group = YEAR, color = forcats::fct_other(as.factor(YEAR),keep = 2009)))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(viridis))
suppressPackageStartupMessages(library(reshape2))
flu_train <- read.csv("data/flu-train.csv")
flu_test <- read.csv("data/flu-test.csv")
ggplot(flu_train, aes(x = WEEK, y = PERCENT_POSITIVES)) +
geom_line(aes(group = YEAR, color = forcats::fct_other(as.factor(YEAR),keep = 2009)))
library(splines)
kr1 <- seq(min(flu_train$WEEK), max(flu_train$WEEK), 10)
kr2 <- seq(min(flu_train$WEEK), max(flu_train$WEEK), 5)
fit <- lm(PERCENT_POSITIVES ~ WEEK, data = flu_train)
summary(fit)
fit1 <- lm(PERCENT_POSITIVES ~  ns(WEEK, knots=kr1), data = flu_train)
summary(fit1)
fit2 <- lm(PERCENT_POSITIVES ~  ns(WEEK, knots=kr2), data = flu_train)
summary(fit2)
x <- flu_train$WEEK
y <- flu_train$PERCENT_POSITIVES
ggplot(flu_train, aes(WEEK, PERCENT_POSITIVES)) +
geom_line(aes(group=YEAR), alpha=0.2) +
geom_line(data=data.frame(x=x, y=predict(fit)), mapping=aes(x, y), color = "green") +
geom_line(data=data.frame(x=x, y=predict(fit1)), mapping=aes(x, y), color = "red") +
geom_line(data=data.frame(x=x, y=predict(fit2)), mapping = aes(x, y),color = "blue") +
xlab("Week") + ylab("Percent Positive") +
ggtitle("Flu Training Data Percent Positives:\nSpline Interpolation")
x <- flu_test$WEEK
y <- flu_test$PERCENT_POSITIVES
flu_test_predict <- predict(fit, newdata = flu_test)### 6
flu_test_predict_1 <- predict(fit1, newdata = flu_test)### 6
flu_test_predict_2 <- predict(fit2, newdata = flu_test) #### 11
MSE <- mean((y - flu_test_predict)^2)
MSE
MSE_1 <- mean((y - flu_test_predict_1)^2)
MSE_1
MSE_2 <- mean((y - flu_test_predict_2)^2)
MSE_2
flow <- read.csv("data/flow.csv")
flow<- flow %>% mutate(day_of_year = lubridate::yday(date))
#span=1
fit_k2 <- data.frame(ksmooth(flow$day_of_year, flow$flow,bandwidth = 1))
#span=10
fit_k3 <- data.frame(ksmooth(flow$day_of_year,flow$flow,bandwidth = 20))
#span=50
fit_k4 <- data.frame(ksmooth(flow$day_of_year, flow$flow,bandwidth = 300))
ggplot(flow, aes(flow, day_of_year)) +
geom_point(aes(x=day_of_year,y=flow),color= "Pink", alpha = 0.2) +
geom_line(data = fit_k2, aes(x, y, colour = "lc2"), size=1) +
geom_line(data = fit_k3, aes(x, y, colour = "lc3"), size=1) +
geom_line(data = fit_k4, aes(x, y, colour = "lc4"), size=1) +
ggtitle("") +
xlab("") + ylab("") +
scale_color_manual(name = "Bandwidth",
values=c("lc2"="blue",
"lc3"="green","lc4"="orange"),
labels = c("1","20", "300"))
model_poly0 <- loess(flow$flow ~ flow$day_of_year,span = 0.05, degree= 0)
model_poly1<- loess(flow$flow ~ flow$day_of_year, span=0.05,degree= 1)
model_poly2 <- loess(flow$flow ~ flow$day_of_year,span= 0.05,degree= 2)
x <- flow$day_of_year
y <- flow$flow
ggplot(flow, aes(day_of_year, flow)) +
geom_line(alpha=0.2) +
geom_line(data=data.frame(x=x, y=predict(model_poly0)),
mapping=aes(x=x, y=y, colour="lc1"), size = 1) +
geom_line(data=data.frame(x=x, y=predict(model_poly1)),
mapping=aes(x, y, colour="lc2"), size = 1) +
geom_line(data=data.frame(x=x, y=predict(model_poly2)),
mapping=aes(x, y, colour="lc3"), size = 1) +
ggtitle("") +
xlab("") + ylab("")  +
scale_color_manual(name = "Degree",
values=c("lc1"="green","lc2"="red","lc3"="blue"),
labels = c("0","1","2"))
mod<- model_poly1 %>% broom::augment()
ggplot(mod,aes(x= mod$.fitted,y=mod$.resid ))+
geom_point()  + labs(x="Predicted",y="Residuals",title="Residuals") +
geom_abline(intercept = 0, slope =0)
theme_minimal()
mod<- model_poly1 %>% broom::augment()
ggplot(mod,aes(x= mod$.fitted,y=mod$.resid ))+
geom_point()  + labs(x="Predicted",y="Residuals",title="Residuals") +
geom_abline(intercept = 0, slope =0) +
theme_minimal()
mod<- model_poly1 %>% broom::augment()
ggplot(mod,aes(x= mod$.fitted,y=mod$.resid ))+
geom_point()  + labs(x="Predicted",y="Residuals",title="Residuals") +
geom_abline(intercept = 0, slope =0, color = "Red") +
theme_minimal()
model_poly0 <- loess(flow$flow ~ flow$day_of_year,span = 0.05, degree= 0)
model_poly1<- loess(flow$flow ~ flow$day_of_year, span=0.05,degree= 1)
model_poly2 <- loess(flow$flow ~ flow$day_of_year,span= 0.05,degree= 2)
x <- flow$day_of_year
y <- flow$flow
ggplot(flow, aes(day_of_year, flow)) +
geom_line(alpha=0.2) +
geom_line(data=data.frame(x=x, y=predict(model_poly0)),
mapping=aes(x=x, y=y, colour="lc1"), size = 1) +
geom_line(data=data.frame(x=x, y=predict(model_poly1)),
mapping=aes(x, y, colour="lc2"), size = 1) +
geom_line(data=data.frame(x=x, y=predict(model_poly2)),
mapping=aes(x, y, colour="lc3"), size = 1) +
ggtitle("") +
xlab("") + ylab("")  +
scale_color_manual(name = "Degree",
values=c("lc1"="green","lc2"="red","lc3"="blue"),
labels = c("0","1","2"))
flow <- read.csv("data/flow.csv")
flow<- flow %>% mutate(day_of_year = lubridate::yday(date))
#span=1
fit_k2 <- data.frame(ksmooth(flow$day_of_year, flow$flow,bandwidth = 1))
#span=10
fit_k3 <- data.frame(ksmooth(flow$day_of_year,flow$flow,bandwidth = 20))
#span=50
fit_k4 <- data.frame(ksmooth(flow$day_of_year, flow$flow,bandwidth = 300))
ggplot(flow, aes(flow, day_of_year)) +
geom_point(aes(x=day_of_year,y=flow),color= "Pink", alpha = 0.2) +
geom_line(data = fit_k2, aes(x, y, colour = "lc2"), size=1) +
geom_line(data = fit_k3, aes(x, y, colour = "lc3"), size=1) +
geom_line(data = fit_k4, aes(x, y, colour = "lc4"), size=1) +
ggtitle("") +
xlab("") + ylab("") +
scale_color_manual(name = "Bandwidth",
values=c("lc2"="blue",
"lc3"="green","lc4"="orange"),
labels = c("1","20", "300"))
flow <- read.csv("data/flow.csv")
flow<- flow %>% mutate(day_of_year = lubridate::yday(date))
#span=1
fit_k2 <- data.frame(ksmooth(flow$day_of_year, flow$flow,bandwidth = 1))
#span=10
fit_k3 <- data.frame(ksmooth(flow$day_of_year,flow$flow,bandwidth = 20))
#span=300
fit_k4 <- data.frame(ksmooth(flow$day_of_year, flow$flow,bandwidth = 300))
ggplot(flow, aes(flow, day_of_year)) +
geom_point(aes(x=day_of_year,y=flow),color= "Pink", alpha = 0.2) +
geom_line(data = fit_k2, aes(x, y, colour = "1"), size=1) +
geom_line(data = fit_k3, aes(x, y, colour = "20"), size=1) +
geom_line(data = fit_k4, aes(x, y, colour = "300"), size=1) +
ggtitle("") +
xlab("") + ylab("") +
scale_color_manual(name = "Bandwidth",
values=c("lc2"="blue",
"lc3"="green","lc4"="orange"),
labels = c("1","20", "300"))
flow <- read.csv("data/flow.csv")
flow<- flow %>% mutate(day_of_year = lubridate::yday(date))
#span=1
fit_k2 <- data.frame(ksmooth(flow$day_of_year, flow$flow,bandwidth = 1))
#span=10
fit_k3 <- data.frame(ksmooth(flow$day_of_year,flow$flow,bandwidth = 20))
#span=300
fit_k4 <- data.frame(ksmooth(flow$day_of_year, flow$flow,bandwidth = 300))
ggplot(flow, aes(flow, day_of_year)) +
geom_point(aes(x=day_of_year,y=flow),color= "Pink", alpha = 0.2) +
geom_line(data = fit_k2, aes(x, y, colour = "1"), size=1) +
geom_line(data = fit_k3, aes(x, y, colour = "20"), size=1) +
geom_line(data = fit_k4, aes(x, y, colour = "300"), size=1) +
ggtitle("") +
xlab("") + ylab("") +
scale_color_manual(name = "Bandwidth", values=c("1"="blue", "20"="green","300"="orange"), labels = c("1","20", "300"))
flow <- read.csv("data/flow.csv")
flow<- flow %>% mutate(day_of_year = lubridate::yday(date))
#span=1
fit_k2 <- data.frame(ksmooth(flow$day_of_year, flow$flow,bandwidth = 1))
#span=10
fit_k3 <- data.frame(ksmooth(flow$day_of_year,flow$flow,bandwidth = 20))
#span=300
fit_k4 <- data.frame(ksmooth(flow$day_of_year, flow$flow,bandwidth = 300))
ggplot(flow, aes(flow, day_of_year)) +
geom_point(aes(x=day_of_year,y=flow),color= "Pink", alpha = 0.2) +
geom_line(data = fit_k2, aes(x, y, colour = "1"), size=1.5) +
geom_line(data = fit_k3, aes(x, y, colour = "20"), size=1.5) +
geom_line(data = fit_k4, aes(x, y, colour = "300"), size=1.5) +
ggtitle("") +
xlab("") + ylab("") +
scale_color_manual(name = "Bandwidth", values=c("1"="blue", "20"="green","300"="orange"), labels = c("1","20", "300"))
model_poly0 <- loess(flow$flow ~ flow$day_of_year,span = 0.05, degree= 0)
model_poly1<- loess(flow$flow ~ flow$day_of_year, span=0.05,degree= 1)
model_poly2 <- loess(flow$flow ~ flow$day_of_year,span= 0.05,degree= 2)
x <- flow$day_of_year
y <- flow$flow
ggplot(flow, aes(day_of_year, flow)) +
geom_line(alpha=0.2) +
geom_line(data=data.frame(x=x, y=predict(model_poly0)),
mapping=aes(x=x, y=y, colour="lc1"), size = 1.5) +
geom_line(data=data.frame(x=x, y=predict(model_poly1)),
mapping=aes(x, y, colour="lc2"), size = 1.5) +
geom_line(data=data.frame(x=x, y=predict(model_poly2)),
mapping=aes(x, y, colour="lc3"), size = 1.5) +
ggtitle("") +
xlab("") + ylab("")  +
scale_color_manual(name = "Degree",
values=c("lc1"="green","lc2"="red","lc3"="blue"),
labels = c("0","1","2"))
model_poly0 <- loess(flow$flow ~ flow$day_of_year,span = 0.05, degree= 0)
model_poly1<- loess(flow$flow ~ flow$day_of_year, span=0.05,degree= 1)
model_poly2 <- loess(flow$flow ~ flow$day_of_year,span= 0.05,degree= 2)
x <- flow$day_of_year
y <- flow$flow
ggplot(flow, aes(day_of_year, flow)) +
geom_line(alpha=0.2) +
geom_line(data=data.frame(x=x, y=predict(model_poly0)),
mapping=aes(x=x, y=y, colour="lc1"), size = 1) +
geom_line(data=data.frame(x=x, y=predict(model_poly1)),
mapping=aes(x, y, colour="lc2"), size = 1) +
geom_line(data=data.frame(x=x, y=predict(model_poly2)),
mapping=aes(x, y, colour="lc3"), size = 1) +
ggtitle("") +
xlab("") + ylab("")  +
scale_color_manual(name = "Degree",
values=c("lc1"="green","lc2"="red","lc3"="blue"),
labels = c("0","1","2"))
shiny::runApp('GitHub/Block4-MDS/Viz-2/Milestone2Viz/rate_wine_shiny')
runApp('GitHub/Block4-MDS/Viz-2/Milestone2Viz/rate_wine_shiny')
runApp('GitHub/Block4-MDS/Viz-2/Milestone2Viz/rate_wine_shiny')
runApp('GitHub/Block4-MDS/Viz-2/Milestone2Viz/rate_wine_shiny')
runApp('GitHub/Block4-MDS/Viz-2/Milestone2Viz/rate_wine_shiny')
